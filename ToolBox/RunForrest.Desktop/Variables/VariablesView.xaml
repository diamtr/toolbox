<UserControl x:Class="RunForrestPlugin.VariablesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RunForrestPlugin"
             xmlns:res="clr-namespace:RunForrestPlugin.Properties"
             mc:Ignorable="d">

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\Brushes.xaml"/>
        <ResourceDictionary Source="..\Styles.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <local:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />

      <DataTemplate DataType="{x:Type local:VariableData}">
        <local:VariableDataView />
      </DataTemplate>
      
      <Style x:Key="VariablesListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListViewItem}">

              <Border Padding="0,1,0,1">

                <Border.Style>
                  <Style TargetType="{x:Type Border}">
                    <Style.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource HighlihtBrush}" />
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                </Border.Style>

                <Grid>

                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>

                  <ContentControl Grid.Column="0" Content="{Binding Path=.}" />

                  <!-- Call DeleteVariableCommand from Variables.
                       It is ListView DataContext.
                       Button DataContext is ListViewItem (type: VariableData)
                       {Binding Path=.} push ListViewItem (type: VariableData) as parameter. -->
                  <Button Grid.Column="1"
                          Style="{StaticResource InlineButton}"
                          Command="{Binding DataContext.DeleteVariableCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                          CommandParameter="{Binding Path=.}"
                          Content="{x:Static res:Resources.DeleteVariableButton}">
                    
                  </Button>

                </Grid>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

    </ResourceDictionary>
  </UserControl.Resources>

  <Border Padding="10"
          Background="{StaticResource ControlBackgroundBrush}">

    <!-- Variables -->
    <Grid>

      <Grid.RowDefinitions>
        <!-- 0: Variables list -->
        <RowDefinition Height="Auto" />
        <!-- 1: Add new variable -->
        <RowDefinition Height="Auto" />
        <!-- 2: Save variables -->
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <!-- Variables List -->
      <ScrollViewer Grid.Row="0"
                    HorizontalScrollBarVisibility="Disabled"
                    VerticalScrollBarVisibility="Auto">
        <ListView BorderThickness="0"
                  BorderBrush="Transparent"
                  Background="{StaticResource ControlBackgroundBrush}"
                  ItemsSource="{Binding Items}"
                  ItemContainerStyle="{StaticResource VariablesListViewItem}"/>
      </ScrollViewer>

      <!-- Add new variable -->
      <Grid Grid.Row="1"
            Margin="0,20,0,0" >

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        
        <ContentControl Grid.Column="0" Content="{Binding NewVariable}" />

        <Button Grid.Column="1"
                Style="{StaticResource InlineButton}"
                Command="{Binding AddVariableCommand}"
                Content="{x:Static res:Resources.AddVariableButton}" />

      </Grid>

      <!-- Save variables -->
      <Grid Grid.Row="2"
            Margin="0,20,0,0" >

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Column="0"
                   Margin="10,0,0,0"
                   Foreground="Gray"
                   FontStyle="Italic"
                   Text="{Binding StringFormat={x:Static res:Resources.VariablesSavedMessageFormat}, Path=LastSaveDateTime}"
                   Visibility="{Binding LastSaveDateTime, Converter={StaticResource ObjectToVisibilityConverter}}"/>

        <Button Grid.Column="1"
                Command="{Binding SaveVariablesCommand}"
                Content="{x:Static res:Resources.SaveVariablesButtonName}" />
      </Grid>

    </Grid>

  </Border>

</UserControl>
