<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ToolBox.Desktop">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Brushes.xaml"/>
    <ResourceDictionary Source="CheckBoxStyle.xaml"/>
    <ResourceDictionary Source="ComboBoxStyle.xaml"/>
    <ResourceDictionary Source="TextBoxStyle.xaml"/>
    <ResourceDictionary Source="ListViewStyle.xaml"/>
    <ResourceDictionary Source="ListViewItemStyle.xaml"/>
    <ResourceDictionary Source="ScrollBarStyle.xaml"/>
    <ResourceDictionary Source="ToolTipStyle.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <!-- Window -->
  <Style x:Key="GeneralWindowStyle" TargetType="{x:Type Window}" BasedOn="{StaticResource {x:Type Window}}">
    <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}" />
  </Style>

  <Style TargetType="{x:Type GridSplitter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Grid>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{StaticResource GeneralBorderBrush}"
                    BorderThickness="2"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- TextBlock -->
  <Style TargetType="{x:Type TextBlock}">
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="Foreground" Value="{StaticResource GeneralForegroundBrush}" />
  </Style>

  <!-- TextBlock Headers -->
  <Style x:Key="Header_0" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
    <Setter Property="Margin" Value="0, 20, 20, 10" />
    <Setter Property="TextAlignment" Value="Left" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="32" />
  </Style>

  <!-- ToggleButton -->
  <Style TargetType="{x:Type ToggleButton}">
    <Setter Property="MinHeight" Value="20"/>
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="Padding" Value="10,1,10,3"/>
    <Setter Property="Foreground" Value="{StaticResource GeneralForegroundBrush}"/>
    <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}"
                  CornerRadius="2">
            <ContentPresenter Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="False">
        <Setter Property="BorderBrush" Value="{StaticResource GeneralBorderBrush}"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  
  <!-- Button -->
  <Style TargetType="{x:Type Button}">
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="Foreground" Value="{StaticResource GeneralForegroundBrush}"/>
    <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource GeneralBorderBrush}"/>
    <Setter Property="Padding" Value="10,1,10,3"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Background="{TemplateBinding Background}"
                  BorderThickness="1"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Padding="{TemplateBinding Padding}"
                  CornerRadius="2">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource InputAreaBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  
</ResourceDictionary>