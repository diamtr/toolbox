<UserControl x:Class="MinionCopy.Desktop.MinionCopy"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:msxb="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:MinionCopy.Desktop"
             xmlns:converter="clr-namespace:ToolBox.Desktop.Base.Converters;assembly=ToolBox.Desktop.Base"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

  <UserControl.Resources>
    
    <DataTemplate DataType="{x:Type local:CopyFileStrategyViewModel}">
      <local:CopyFileStrategyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:CopyDirectoryStrategyViewModel}">
      <local:CopyDirectoryStrategyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:CopyFromListStrategyViewModel}">
      <local:CopyFromListStrategyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:CopyException}">
      <local:CopyDetailedResultView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:CopySuccess}">
      <local:CopyDetailedResultView/>
    </DataTemplate>

    <converter:VisibilityBoolConverter x:Key="VisibilityBoolConverter"/>

  </UserControl.Resources>
  
  <UserControl.DataContext>
    <local:MainViewModel />
  </UserControl.DataContext>

  <!-- note: use 'msxb:Interaction' with Microsoft.Xaml.Behaviors.Wpf nuget package -->
  <msxb:Interaction.Triggers>
    <msxb:EventTrigger EventName="Loaded">
      <msxb:InvokeCommandAction Command="{Binding UserControlLoadedCommand}" />
    </msxb:EventTrigger>
  </msxb:Interaction.Triggers>

  <Grid Margin="5">
    <Image Source="img\minion.png"
           VerticalAlignment="Bottom"
           HorizontalAlignment="Right"
           RenderOptions.BitmapScalingMode="Fant"
           Height="200"/>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="2"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Button Content="TA-DAA!" Margin="0,10,0,20" Grid.Row="0"
              HorizontalAlignment="Stretch" Height="30"
              Command="{Binding CopyCommand}"/>
      <ScrollViewer Grid.Row="1"
                    VerticalScrollBarVisibility="Auto"
                    HorizontalScrollBarVisibility="Hidden">
        <ContentPresenter Content="{Binding CopyFromListStrategyViewModel}"
                          Margin="0,0,10,0"/>
      </ScrollViewer>
      <GridSplitter Grid.Row="2"
                    HorizontalAlignment="Stretch"/>
      <Grid Grid.Row="3">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"
                    Grid.Row="0"
                    Margin="0,5,0,5">
          <RadioButton x:Name="ShowCopyStatusButton"
                       Style="{StaticResource {x:Type ToggleButton}}"
                       IsChecked="True">
            <TextBlock Text="Status"/>
          </RadioButton>
          <RadioButton x:Name="ShowCopyExceptionsButton"
                       Style="{StaticResource {x:Type ToggleButton}}">
            <TextBlock Text="{Binding CopyExceptions.Count, StringFormat=Errors ({0})}"/>
          </RadioButton>
          <RadioButton x:Name="ShowCopyDetailedResultsButton" Style="{StaticResource {x:Type ToggleButton}}">
            <TextBlock Text="{Binding CopyDetailedResults.Count, StringFormat=All ({0})}"/>
          </RadioButton>
        </StackPanel>
        <TextBlock Grid.Row="1"
                   Text="{Binding TotalResults}"
                   Visibility="{Binding ElementName=ShowCopyStatusButton, Path=IsChecked, Converter={StaticResource VisibilityBoolConverter}}"/>
        <ListView Grid.Row="1"
                  ItemsSource="{Binding CopyExceptions}"
                  SelectedItem="{Binding SelectedCopyException}"
                  Visibility="{Binding ElementName=ShowCopyExceptionsButton, Path=IsChecked, Converter={StaticResource VisibilityBoolConverter}}"/>
        <ListView Grid.Row="1"
                  ItemsSource="{Binding CopyDetailedResults}"
                  SelectedItem="{Binding SelectedCopyDetailedResult}"
                  Visibility="{Binding ElementName=ShowCopyDetailedResultsButton, Path=IsChecked, Converter={StaticResource VisibilityBoolConverter}}"/>
      </Grid>
    </Grid>
  </Grid>
</UserControl>
